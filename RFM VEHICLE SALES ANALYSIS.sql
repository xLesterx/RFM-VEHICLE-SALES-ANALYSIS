--- INSPECTING DATA
SELECT * 
FROM sales_data_sample

--Checking unique values
SELECT DISTINCT STATUS --GOOD TO PLOT
FROM sales_data_sample 

SELECT DISTINCT PRODUCTLINE --GOOD TO PLOT
FROM sales_data_sample

SELECT DISTINCT DEALSIZE --GOOD TO PLOT
FROM sales_data_sample

SELECT DISTINCT COUNTRY --GOOD TO PLOT
FROM sales_data_sample

SELECT DISTINCT TERRITORY --GOOD TO PLOT
FROM sales_data_sample

SELECT DISTINCT YEAR_ID
FROM sales_data_sample


--- ANALYSIS

--Grouping Sales by PRODUCTLINE
SELECT PRODUCTLINE, SUM(SALES) AS REVENUE 
FROM sales_data_sample
GROUP BY PRODUCTLINE
ORDER BY 2 DESC

--Grouping Sales by YEAR_ID
SELECT YEAR_ID, SUM(SALES) AS REVENUE 
FROM sales_data_sample
GROUP BY YEAR_ID
ORDER BY 2 DESC

--CHECKING THE MONTHS OPERATED IN A YEAR
SELECT DISTINCT MONTH_ID -- OPERATED FOR 12 MONTHS
FROM sales_data_sample
WHERE YEAR_ID = 2003
ORDER BY MONTH_ID

SELECT DISTINCT MONTH_ID -- OPERATED FOR 12 MONTHS
FROM sales_data_sample
WHERE YEAR_ID = 2004
ORDER BY MONTH_ID

SELECT DISTINCT MONTH_ID -- OPERATED FOR 5 MONTHS (THE LEAST SALES)
FROM sales_data_sample
WHERE YEAR_ID = 2005
ORDER BY MONTH_ID

--Grouping Sales by DEALSIZE
SELECT DEALSIZE, SUM(SALES) AS REVENUE 
FROM sales_data_sample
GROUP BY DEALSIZE
ORDER BY 2 DESC

SELECT DISTINCT(CUSTOMERNAME), SUM(ORDERLINENUMBER) AS FREQUENCY
FROM sales_data_sample
GROUP BY CUSTOMERNAME
ORDER BY 2 DESC

--- WHAT WAS THE BEST MONTH FOR SALES IN A SPECIFIC YEAR AND HOW MUCH WAS EARNED IN THAT MONTH?
SELECT MONTH_ID, SUM(SALES) AS REVENUE, COUNT(ORDERNUMBER) AS FREQUENCY
FROM sales_data_sample
WHERE YEAR_ID = 2003
GROUP BY MONTH_ID
ORDER BY 2 DESC

SELECT MONTH_ID, SUM(SALES) AS REVENUE, COUNT(ORDERNUMBER) AS FREQUENCY
FROM sales_data_sample
WHERE YEAR_ID = 2004
GROUP BY MONTH_ID
ORDER BY 2 DESC

SELECT MONTH_ID, SUM(SALES) AS REVENUE, COUNT(ORDERNUMBER) AS FREQUENCY
FROM sales_data_sample
WHERE YEAR_ID = 2005
GROUP BY MONTH_ID
ORDER BY 2 DESC

--AS FOR THE ANALYSIS ABOVE, THE 11TH MONTH SHOWS THE BEST MONTH FOR SALES.

-- WHAT PRODUCT THEY SELL IN THE 11TH MONTH?
SELECT MONTH_ID, PRODUCTLINE, SUM(SALES) AS REVENUE, COUNT(ORDERNUMBER) AS FREQUENCY
FROM sales_data_sample
WHERE MONTH_ID = '11' AND YEAR_ID = 2003
GROUP BY MONTH_ID, PRODUCTLINE
ORDER BY 3 DESC

SELECT MONTH_ID, PRODUCTLINE, SUM(SALES) AS REVENUE, COUNT(ORDERNUMBER) AS FREQUENCY
FROM sales_data_sample
WHERE MONTH_ID = '11' AND YEAR_ID = 2004
GROUP BY MONTH_ID, PRODUCTLINE
ORDER BY 3 DESC

-- WHO IS THE BEST CUSTOMER (CAN BE ANSWER USING THE RFM TECHNIQUE)

DROP TABLE IF EXISTS #RFM; -- TEMP TABLE

WITH RFM AS --CTE TABLE  -- MAKING 
(
SELECT 
	CUSTOMERNAME,
	SUM(SALES) AS MONETARY_VAL,
	AVG(SALES) AS AVG_MONETARY_VAL,
	COUNT(ORDERNUMBER) AS FREQUENCY,
	MAX(ORDERDATE) AS LAST_ORDER_DATE,
		(SELECT MAX(ORDERDATE)
			FROM sales_data_sample) AS MAX_ORDER_DATE, -- TO DETERMINE THE LAST DATE PURCHASED IN THE DATASET
	DATEDIFF(DD, MAX(ORDERDATE), (SELECT MAX(ORDERDATE) -- TO DETERMINE THE DIFFERENCE BETWEEN THE FIRST PURCHASE
			FROM sales_data_sample)) AS RECENCY_DAYS		--AND THE LAST PURCHASE (BY DAYS)
FROM sales_data_sample
GROUP BY CUSTOMERNAME
),
RFM_CALC AS 
(
	SELECT R.*,
		NTILE(4) OVER (ORDER BY RECENCY_DAYS DESC) AS RFM_RECENCY,
		NTILE(4) OVER (ORDER BY FREQUENCY) AS RFM_FREQUENCY,
		NTILE(4) OVER (ORDER BY MONETARY_VAL) AS RFM_MONETARY
	FROM RFM R
)
SELECT
	C.*, RFM_RECENCY + RFM_FREQUENCY + RFM_MONETARY AS RFM_CELL,
	CAST(RFM_RECENCY AS VARCHAR)  + CAST(RFM_FREQUENCY AS VARCHAR) 
	+ CAST(RFM_MONETARY AS VARCHAR) AS RFM_CELL_STRING
INTO #RFM
FROM RFM_CALC C

--DETERMINING THE CUSTOMER'S STATUS
SELECT CUSTOMERNAME, RFM_RECENCY, RFM_FREQUENCY,  RFM_MONETARY,
	CASE
		WHEN RFM_CELL_STRING IN (111, 112, 121, 122, 123, 132, 211, 212, 113, 141) THEN 'LOST CUSTOMERS' 
		WHEN RFM_CELL_STRING IN (133, 134, 143, 144, 234, 244, 334, 343, 344) THEN 'AT RISK' --BIG SPENDER CUSTOMERS THAT HAVEN'T PURCHASE LATELY
		WHEN RFM_CELL_STRING IN (222, 223, 232, 233, 322, 221) THEN 'POTENTIAL CHURNERS' -- CUSTOMERS THAT HAVE A CHANCE OF STOP BUYING PRODUCTS
		WHEN RFM_CELL_STRING IN  (311, 411, 331, 412, 421) THEN 'NEW CUSTOMERS'
		WHEN RFM_CELL_STRING IN (323, 333, 321, 422, 332, 432) THEN 'LOW VALUE CUSTOMERS' -- CUSTOMERS WHO OFTEN BUY PRODUCTS BUT AT LOW POINTS
		WHEN RFM_CELL_STRING IN  (423, 433, 434, 443, 444) THEN 'HIGH VALUE CUSTOMER' -- CUSTOMERS WHO BUY PRODUCTS RECENTLY WITH A HIGH POINTS
	END AS RFM_SEGMENT
FROM #RFM

